package com.utry.javaCallDLL;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
//import java.io.IOException;
import java.io.InputStreamReader;

public class AlgorithmDLL {

	
	
	static
	{
		//System.loadLibrary("algorithmDLL");
		System.loadLibrary("test-lib0");
		ini();
	}
	/*
		初始化函数
	*/
	
	
	
	public static native void ini();
	
	/*车牌识别，返回格式如下：
	
	 [{
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:”浙A12345”
	},{
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:”浙A12345”
	}]
	 */
	public native String LPR(String testImagePath);
	/*火灾隐患识别,返回格式如下：	
	[{
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:123.1
	},{
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:234.1
	}]
	 */
	public native String FR(int temperatueThreshold,String temperatureMatrix,String testImagePath,String normalImagePath);
	/*照明灯异常识别，返回格式如下（其中0代表正常，1代表异常）：
	 {
    	Result:0
	}
	 */
	public native String LR(String testImagePath,String normalImagePath);
	/*窨井盖异常识别,返回格式如下（其中Result为0代表正常，为1代表异常）
	 [{
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:0
	},{
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:1
	}]
	 */
	public native String SCR(String testImagePath,String normalImagePath);
	/*楼道门异常识别，返回格式如下（其中0代表正常，1代表异常）
	 {
    	LeftTopPoint:{x:123,y:456},
    	RightBottomPoint:{x:123,y:456},
    	Result:1
	}
	 */
	public native String DR(String testImagePath,String normalImagePath,String code);
	
	/*杂物检测，返回格式下（其中0代表无杂物，1代表有杂物）
	[{
    LeftTopPoint:{x:123,y:456},
    RightBottomPoint:{x:123,y:456},
	Result:1
	},{
    LeftTopPoint:{x:123,y:456},
    RightBottomPoint:{x:123,y:456},  
	Result:1  
	}]
	*/
	public native String GD(String testImagePath,String normalImagePath, String code);
	 
	public static void main(String[] args) throws Exception {
		
		// TODO Auto-generated method stub
		AlgorithmDLL ad = new AlgorithmDLL();
		String lightPath = "13.jpg";
		//String lightPath = "";
		String platePath = "7.jpg";
		//String platePath = "";	
		String doorImagePath = "14a.jpeg";
		//String doorImagePath = "";
		String manholeImagePath = "37.jpg";
		//String manholeImagePath = "";
		String normalImagePath = "";
		String filePath = "20161020170846589.matrix";
		String garbageImagePath = "door-53.jpg";
		String dataText = "";
		File file=new File(filePath);
		try {
			BufferedReader bs = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
			String content = "";  
			while((content = bs.readLine())!= null){
				dataText += content;
			}
			bs.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
		long startTime = System.currentTimeMillis();
		//System.out.println(platePath); 
		System.out.println("车牌识别结果："+ ad.LPR(platePath));
		long finishTime = System.currentTimeMillis();
		System.out.print((finishTime-startTime)/1000F);
		System.out.println("s");
		
		startTime = System.currentTimeMillis();
		System.out.println("火灾识别结果："+ ad.FR(39,dataText,"",""));
		finishTime = System.currentTimeMillis();
		System.out.print((finishTime-startTime)/1000F);
		System.out.println("s");
		
		System.out.println("照明灯异常识别结果："+ ad.LR(lightPath,normalImagePath));
		startTime = System.currentTimeMillis();
		System.out.println("窨井盖异常识别结果："+ ad.SCR(manholeImagePath,normalImagePath));
		finishTime = System.currentTimeMillis();
		System.out.print((finishTime-startTime)/1000F);
		System.out.println("s");
		
		startTime = System.currentTimeMillis();
		System.out.println("楼道门异常识别结果："+ ad.DR(doorImagePath,normalImagePath,"14"));
		
		System.out.println("杂物检测结果："+ ad.GD(garbageImagePath,"","35"));
		finishTime = System.currentTimeMillis();
		System.out.print((finishTime-startTime)/1000F);
		System.out.println("s");
	}

}
